<?xml version="1.0" encoding="UTF-8"?>  
    <beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:context="http://www.springframework.org/schema/context"  
        xmlns:aop="http://www.springframework.org/schema/aop"  
        xmlns:tx="http://www.springframework.org/schema/tx"  
        xmlns:mvc="http://www.springframework.org/schema/mvc"  
        xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/aop   
                            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
                            http://www.springframework.org/schema/tx  
                            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">  
    <!-- jedis 配置-->    
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >    
        <!--最大空闲数-->    
        <property name="maxIdle" value="${redis.maxIdle}" />    
        <!--最大建立连接等待时间-->    
        <property name="maxWaitMillis" value="${redis.maxWait}" />    
        <!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->    
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />    
    </bean >    
    
    <!--配置文件加载-->    
    <bean id="resourcePropertySource" class="org.springframework.core.io.support.ResourcePropertySource">    
        <constructor-arg name="name" value="redis.properties"/>    
        <constructor-arg name="resource" value="classpath:redis.properties"/>    
    </bean>    
    <!--redisCluster配置-->    
    <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">    
        <constructor-arg name="propertySource" ref="resourcePropertySource"/>    
    </bean>    
    <!-- redis服务器中心 -->    
    <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >    
       <constructor-arg name="clusterConfig" ref="redisClusterConfiguration"/>    
        <constructor-arg name="poolConfig" ref="poolConfig"/>    
        <property name="password" value="${redis.password}" />    
        <property name="timeout" value="${redis.timeout}" ></property>    
    </bean >    
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >    
        <property name="connectionFactory" ref="connectionFactory" />    
        <property name="keySerializer" >    
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />    
        </property>    
        <property name="valueSerializer" >    
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />    
        </property>    
        <property name="hashKeySerializer">    
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>    
        </property>    
        <property name="hashValueSerializer">    
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>    
        </property>    
    </bean >    
    <!-- 
    <bean id="redisHttpSessionConfiguration"    
          class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">    
       超时时间,默认1800秒
        <property name="maxInactiveIntervalInSeconds" value="1800" />    
    </bean>    
     -->
</beans> 